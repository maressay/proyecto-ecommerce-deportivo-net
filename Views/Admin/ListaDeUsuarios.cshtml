@using X.PagedList.Mvc.Core; @*import this so we get our HTML Helper*@
@using X.PagedList;
@*import this so we can cast our list to IPagedList (only necessary because ViewBag is dynamic)*@
@using X.PagedList.Mvc.Core.Fluent;

@model IPagedList<ApplicationUser>;

<link rel="stylesheet" href="~/css/listaDeUsuarios.css" />
@{
    ViewData["Title"] = "Lista de Clientes";

    // Leemos el mensaje que guardó el controlador en TempData
    var mensajeConsola = TempData["MessageDeRespuesta"] as string ?? "";
}
<section class="listar_product" id="listar_product">
    <div class="table-product-form-container">
        <br>
        <h1 class="heading"> <span>Lista de Usuarios</span></h1>
        <div class="Buscador">
            <span>Buscar Usuario por Nombre</span>
            <form asp-controller="Admin" asp-action="BuscarUsuario" method="get">
                <input type="text" name="query" />
                <button type="submit" class="btnBuscar">Buscar</button>
            </form>

            <a style="text-decoration: none;" asp-area="" asp-controller="Admin" asp-action="ExportarUsuariosEnPDF"
                class="btnPDF">Exportar en PDF</a>
            <a style="text-decoration: none;" asp-area="" asp-controller="Admin" asp-action="ExportarUsuariosEnExcel"
                class="btnExcel">Exportar en Excel</a>
        </div>
        <br>
         <!-- Mensaje de agradecimiento/detalles -->
                @if (!string.IsNullOrEmpty(mensajeConsola))
{
    <p class="lead-custom fs-2 mb-2">@mensajeConsola</p>
}


            

                <hr />

        <table class="table">
            <thead>
                <tr>
                    <th>Id</th>
                    <th>Nombre</th>
                    <th>Apellidos</th>
                    <th>Email</th>
                    <th>DNI</th>
                    <th>Editar</th>
                    <th>Eliminar</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var usuario in Model)
                {
                    <tr>
                        <td>@usuario.Id</td>
                        <td>@usuario.Nombres</td>
                        <td>@usuario.Apellidos</td>
                        <td>@usuario.Email</td>
                        <td>@usuario.Dni</td>
                        <td>
                            <!-- Botón de Editar -->
                            <a asp-controller="Admin" asp-action="EditarUsuario" asp-route-id="@usuario.Id"
                                class="btnEditar">
                                <i class="fas fa-edit"></i>
                            </a>
                        </td>
                        <td>
                            <!-- Botón de Eliminar -->
                            <form asp-controller="Admin" asp-action="EliminarUsuario" asp-route-id="@usuario.Id"
                                method="post" onsubmit="return confirm('¿Está seguro de que desea eliminar este usuario?')"
                                class="d-inline-block">
                                <button type="submit" class="btnEliminar">
                                    <i class="fas fa-trash-alt"></i>
                                </button>
                            </form>
                        </td>
                        @* <td>
                    <a asp-controller="Admin" asp-action="ExportarUnSoloProductoEnPDF"
                    asp-route-id="@producto.id">PDF</a>
                    <a asp-controller="Admin" asp-action="ExportarUnSoloProductoEnExcel"
                    asp-route-id="@producto.id">EXcel</a>
                    </td>*@
                    </tr>
                }
            </tbody>
        </table>
        <br><br>

        @* Paginador *@
        <div class="pagination-container">
            <ul class="pagination">
                <li class="page-item @(Model.IsFirstPage ? "disabled" : "")">
                    <a class="page-link" href="@Url.Action("ListaDeUsuarios", new { page = 1 })">Primera</a>
                </li>
                <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
                    <a class="page-link"
                        href="@Url.Action("ListaDeUsuarios", new { page = Model.PageNumber - 1 })">&laquo;</a>
                </li>
                @for (var pageNumber = 1; pageNumber <= Model.PageCount; pageNumber++)
                {
                    <li class="page-item @(pageNumber == Model.PageNumber ? "active" : "")">
                        <a class="page-link"
                            href="@Url.Action("ListaDeUsuarios", new { page = pageNumber })">@pageNumber</a>
                    </li>
                }
                <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                    <a class="page-link"
                        href="@Url.Action("ListaDeUsuarios", new { page = Model.PageNumber + 1 })">&raquo;</a>
                </li>
                <li class="page-item @(Model.IsLastPage ? "disabled" : "")">
                    <a class="page-link"
                        href="@Url.Action("ListaDeUsuarios", new { page = Model.PageCount })">&Uacute;ltima</a>
                </li>
            </ul>
        </div>

    </div>

      @* ————————————— Inyectar console.log si TempData tiene un mensaje ————————————— *@
    @if (!string.IsNullOrEmpty(mensajeConsola))
    {
        <script>
            // Cuando la página cargue, este console.log se mostrará en la Consola del navegador
            console.log('@mensajeConsola\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n');
        </script>
    }
    @* ———————————————————————————————————————————————————————————————— *@
</section>